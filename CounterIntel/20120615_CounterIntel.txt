
int sensorPin = A3;    // select the input pin for the Rangefinder
int knobPin = A0;
int gunPin = 5;
int switchPin = 10;


// Input smoothing, from IDE samples
const int numReadings = 10;

int readings[numReadings];      // the readings from the analog input
int index = 0;                  // the index of the current reading
int total = 0;                  // the running total
int average = 0;                // the average


void setup()
{
  Serial.begin(9600);
  pinMode(switchPin, INPUT);


  backlightOn();

  // Splash Screen
  selectLineOne();
  Serial.print("Counter Intelligence");
  selectLineTwo();
  Serial.print("Cats beware!");

  // Sensor smoothing, initialize all the readings to 0: 
  for (int thisReading = 0; thisReading < numReadings; thisReading++)
    readings[thisReading] = 0;      

  delay(3000);
  clearLCD();
}

void loop()
{  
  bool armed = digitalRead(switchPin);

  average = readRangefinder();

  selectLineOne();
  Serial.print(millis());
  Serial.print(" ");
  Serial.print(analogRead(sensorPin));


  selectLineTwo();
  Serial.print(average);
  Serial.print(" ");
  Serial.print(armed?"armed": "unarmed");
  delay(200);
  clearLCD();
}

void selectLineOne(){  //puts the cursor at line 0 char 0.
  Serial.write(0xFE);   //command flag
  Serial.write(128);    //position
  delay(10);
}
void selectLineTwo(){  //puts the cursor at line 0 char 0.
  Serial.write(0xFE);   //command flag
  Serial.write(192);    //position
  delay(10);
}
void goTo(int position) { //position = line 1: 0-15, line 2: 16-31, 31+ defaults back to 0
  if (position<16){ Serial.write(0xFE);   //command flag
    Serial.write((position+128));    //position
  }else if (position<32){Serial.write(0xFE);   //command flag
    Serial.write((position+48+128));    //position 
  } else { goTo(0); }
  delay(10);
}

void clearLCD(){
  Serial.write(0xFE);   //command flag
  Serial.write(0x01);   //clear command.
  delay(10);
}
void backlightOn(){  //turns on the backlight
  Serial.write(0x7C);   //command flag for backlight stuff
  Serial.write(157);    //light level.
  delay(10);
}
void backlightOff(){  //turns off the backlight
  Serial.write(0x7C);   //command flag for backlight stuff
  Serial.write(128);     //light level for off.
  delay(10);
}
void serCommand(){   //a general function to call the command flag for issuing all other commands   
  Serial.write(0xFE);
}


int readRangefinder(){
 // subtract the last reading:
  total= total - readings[index];         
  // read from the sensor:  
  readings[index] = analogRead(sensorPin); 
  // add the reading to the total:
  total= total + readings[index];       
  // advance to the next position in the array:  
  index = index + 1;                    

  // if we're at the end of the array...
  if (index >= numReadings)              
    // ...wrap around to the beginning: 
    index = 0;                           

  // calculate the average:
  return (total / numReadings);         
}
